"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
exports.__esModule = true;
exports.Article = void 0;
//  Generated by entity-cli
var typeorm_1 = require("typeorm");
var categorie_entity_1 = require("../../categorie/entities/categorie.entity");
var ressource_entity_1 = require("../../ressource/entities/ressource.entity");
var theme_entity_1 = require("../../theme/entities/theme.entity");
var Article = /** @class */ (function (_super) {
    __extends(Article, _super);
    function Article() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    __decorate([
        typeorm_1.PrimaryGeneratedColumn()
    ], Article.prototype, "id");
    __decorate([
        typeorm_1.CreateDateColumn()
    ], Article.prototype, "createDate");
    __decorate([
        typeorm_1.UpdateDateColumn()
    ], Article.prototype, "updateDate");
    __decorate([
        typeorm_1.Column({ type: 'varchar' })
    ], Article.prototype, "titre");
    __decorate([
        typeorm_1.ManyToMany(function () { return categorie_entity_1.Categorie; }),
        typeorm_1.JoinTable()
    ], Article.prototype, "categories");
    __decorate([
        typeorm_1.OneToMany(function (type) { return ressource_entity_1.Ressource; }, function (ressource) { return ressource.article; })
    ], Article.prototype, "ressources");
    __decorate([
        typeorm_1.ManyToMany(function () { return theme_entity_1.Theme; }),
        typeorm_1.JoinTable()
    ], Article.prototype, "themes");
    Article = __decorate([
        typeorm_1.Entity()
    ], Article);
    return Article;
}(typeorm_1.BaseEntity));
exports.Article = Article;
